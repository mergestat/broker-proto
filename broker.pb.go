// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.19.3
// source: broker.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetQueryRequest) Reset() {
	*x = GetQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryRequest) ProtoMessage() {}

func (x *GetQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryRequest.ProtoReflect.Descriptor instead.
func (*GetQueryRequest) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{0}
}

func (x *GetQueryRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Sql     string `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	Params  string `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	Options string `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetQueryResponse) Reset() {
	*x = GetQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryResponse) ProtoMessage() {}

func (x *GetQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryResponse.ProtoReflect.Descriptor instead.
func (*GetQueryResponse) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{1}
}

func (x *GetQueryResponse) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *GetQueryResponse) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *GetQueryResponse) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *GetQueryResponse) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type QueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// Types that are assignable to Result:
	//	*QueryResult_Schema_
	//	*QueryResult_Row_
	//	*QueryResult_Log_
	//	*QueryResult_Error_
	//	*QueryResult_Done
	Result isQueryResult_Result   `protobuf_oneof:"result"`
	Order  int32                  `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	When   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=when,proto3" json:"when,omitempty"`
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{2}
}

func (x *QueryResult) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (m *QueryResult) GetResult() isQueryResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *QueryResult) GetSchema() *QueryResult_Schema {
	if x, ok := x.GetResult().(*QueryResult_Schema_); ok {
		return x.Schema
	}
	return nil
}

func (x *QueryResult) GetRow() *QueryResult_Row {
	if x, ok := x.GetResult().(*QueryResult_Row_); ok {
		return x.Row
	}
	return nil
}

func (x *QueryResult) GetLog() *QueryResult_Log {
	if x, ok := x.GetResult().(*QueryResult_Log_); ok {
		return x.Log
	}
	return nil
}

func (x *QueryResult) GetError() *QueryResult_Error {
	if x, ok := x.GetResult().(*QueryResult_Error_); ok {
		return x.Error
	}
	return nil
}

func (x *QueryResult) GetDone() *emptypb.Empty {
	if x, ok := x.GetResult().(*QueryResult_Done); ok {
		return x.Done
	}
	return nil
}

func (x *QueryResult) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *QueryResult) GetWhen() *timestamppb.Timestamp {
	if x != nil {
		return x.When
	}
	return nil
}

type isQueryResult_Result interface {
	isQueryResult_Result()
}

type QueryResult_Schema_ struct {
	Schema *QueryResult_Schema `protobuf:"bytes,2,opt,name=schema,proto3,oneof"`
}

type QueryResult_Row_ struct {
	Row *QueryResult_Row `protobuf:"bytes,3,opt,name=row,proto3,oneof"`
}

type QueryResult_Log_ struct {
	Log *QueryResult_Log `protobuf:"bytes,4,opt,name=log,proto3,oneof"`
}

type QueryResult_Error_ struct {
	Error *QueryResult_Error `protobuf:"bytes,5,opt,name=error,proto3,oneof"`
}

type QueryResult_Done struct {
	Done *emptypb.Empty `protobuf:"bytes,6,opt,name=done,proto3,oneof"`
}

func (*QueryResult_Schema_) isQueryResult_Result() {}

func (*QueryResult_Row_) isQueryResult_Result() {}

func (*QueryResult_Log_) isQueryResult_Result() {}

func (*QueryResult_Error_) isQueryResult_Result() {}

func (*QueryResult_Done) isQueryResult_Result() {}

type QueryResultsBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string         `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Results []*QueryResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *QueryResultsBatchRequest) Reset() {
	*x = QueryResultsBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResultsBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResultsBatchRequest) ProtoMessage() {}

func (x *QueryResultsBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResultsBatchRequest.ProtoReflect.Descriptor instead.
func (*QueryResultsBatchRequest) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{3}
}

func (x *QueryResultsBatchRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *QueryResultsBatchRequest) GetResults() []*QueryResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type QueryResultsBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsInserted int32 `protobuf:"varint,1,opt,name=rows_inserted,json=rowsInserted,proto3" json:"rows_inserted,omitempty"`
}

func (x *QueryResultsBatchResponse) Reset() {
	*x = QueryResultsBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResultsBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResultsBatchResponse) ProtoMessage() {}

func (x *QueryResultsBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResultsBatchResponse.ProtoReflect.Descriptor instead.
func (*QueryResultsBatchResponse) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{4}
}

func (x *QueryResultsBatchResponse) GetRowsInserted() int32 {
	if x != nil {
		return x.RowsInserted
	}
	return 0
}

type QueryResult_Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnNames []string `protobuf:"bytes,1,rep,name=columnNames,proto3" json:"columnNames,omitempty"`
	ColumnTypes []string `protobuf:"bytes,2,rep,name=columnTypes,proto3" json:"columnTypes,omitempty"`
}

func (x *QueryResult_Schema) Reset() {
	*x = QueryResult_Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult_Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult_Schema) ProtoMessage() {}

func (x *QueryResult_Schema) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult_Schema.ProtoReflect.Descriptor instead.
func (*QueryResult_Schema) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{2, 0}
}

func (x *QueryResult_Schema) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

func (x *QueryResult_Schema) GetColumnTypes() []string {
	if x != nil {
		return x.ColumnTypes
	}
	return nil
}

type QueryResult_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row string `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
}

func (x *QueryResult_Row) Reset() {
	*x = QueryResult_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult_Row) ProtoMessage() {}

func (x *QueryResult_Row) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult_Row.ProtoReflect.Descriptor instead.
func (*QueryResult_Row) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{2, 1}
}

func (x *QueryResult_Row) GetRow() string {
	if x != nil {
		return x.Row
	}
	return ""
}

type QueryResult_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *QueryResult_Log) Reset() {
	*x = QueryResult_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult_Log) ProtoMessage() {}

func (x *QueryResult_Log) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult_Log.ProtoReflect.Descriptor instead.
func (*QueryResult_Log) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{2, 2}
}

func (x *QueryResult_Log) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type QueryResult_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *QueryResult_Error) Reset() {
	*x = QueryResult_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult_Error) ProtoMessage() {}

func (x *QueryResult_Error) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult_Error.ProtoReflect.Descriptor instead.
func (*QueryResult_Error) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{2, 3}
}

func (x *QueryResult_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_broker_proto protoreflect.FileDescriptor

var file_broker_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x71, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc8, 0x04,
	0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x38, 0x0a, 0x03, 0x72,
	0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x6f, 0x77, 0x48, 0x00,
	0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12,
	0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x77,
	0x68, 0x65, 0x6e, 0x1a, 0x4c, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x1a, 0x17, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x1a, 0x1f, 0x0a, 0x03, 0x4c, 0x6f,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x21, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6c, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x32, 0xd9, 0x01, 0x0a, 0x06, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x24, 0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x2d, 0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_broker_proto_rawDescOnce sync.Once
	file_broker_proto_rawDescData = file_broker_proto_rawDesc
)

func file_broker_proto_rawDescGZIP() []byte {
	file_broker_proto_rawDescOnce.Do(func() {
		file_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_broker_proto_rawDescData)
	})
	return file_broker_proto_rawDescData
}

var file_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_broker_proto_goTypes = []interface{}{
	(*GetQueryRequest)(nil),           // 0: mergestat.broker.v1.GetQueryRequest
	(*GetQueryResponse)(nil),          // 1: mergestat.broker.v1.GetQueryResponse
	(*QueryResult)(nil),               // 2: mergestat.broker.v1.QueryResult
	(*QueryResultsBatchRequest)(nil),  // 3: mergestat.broker.v1.QueryResultsBatchRequest
	(*QueryResultsBatchResponse)(nil), // 4: mergestat.broker.v1.QueryResultsBatchResponse
	(*QueryResult_Schema)(nil),        // 5: mergestat.broker.v1.QueryResult.Schema
	(*QueryResult_Row)(nil),           // 6: mergestat.broker.v1.QueryResult.Row
	(*QueryResult_Log)(nil),           // 7: mergestat.broker.v1.QueryResult.Log
	(*QueryResult_Error)(nil),         // 8: mergestat.broker.v1.QueryResult.Error
	(*emptypb.Empty)(nil),             // 9: google.protobuf.Empty
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
}
var file_broker_proto_depIdxs = []int32{
	5,  // 0: mergestat.broker.v1.QueryResult.schema:type_name -> mergestat.broker.v1.QueryResult.Schema
	6,  // 1: mergestat.broker.v1.QueryResult.row:type_name -> mergestat.broker.v1.QueryResult.Row
	7,  // 2: mergestat.broker.v1.QueryResult.log:type_name -> mergestat.broker.v1.QueryResult.Log
	8,  // 3: mergestat.broker.v1.QueryResult.error:type_name -> mergestat.broker.v1.QueryResult.Error
	9,  // 4: mergestat.broker.v1.QueryResult.done:type_name -> google.protobuf.Empty
	10, // 5: mergestat.broker.v1.QueryResult.when:type_name -> google.protobuf.Timestamp
	2,  // 6: mergestat.broker.v1.QueryResultsBatchRequest.results:type_name -> mergestat.broker.v1.QueryResult
	0,  // 7: mergestat.broker.v1.Broker.GetQuery:input_type -> mergestat.broker.v1.GetQueryRequest
	3,  // 8: mergestat.broker.v1.Broker.QueryResultsBatch:input_type -> mergestat.broker.v1.QueryResultsBatchRequest
	1,  // 9: mergestat.broker.v1.Broker.GetQuery:output_type -> mergestat.broker.v1.GetQueryResponse
	4,  // 10: mergestat.broker.v1.Broker.QueryResultsBatch:output_type -> mergestat.broker.v1.QueryResultsBatchResponse
	9,  // [9:11] is the sub-list for method output_type
	7,  // [7:9] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_broker_proto_init() }
func file_broker_proto_init() {
	if File_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResultsBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResultsBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult_Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_broker_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*QueryResult_Schema_)(nil),
		(*QueryResult_Row_)(nil),
		(*QueryResult_Log_)(nil),
		(*QueryResult_Error_)(nil),
		(*QueryResult_Done)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_broker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_broker_proto_goTypes,
		DependencyIndexes: file_broker_proto_depIdxs,
		MessageInfos:      file_broker_proto_msgTypes,
	}.Build()
	File_broker_proto = out.File
	file_broker_proto_rawDesc = nil
	file_broker_proto_goTypes = nil
	file_broker_proto_depIdxs = nil
}
